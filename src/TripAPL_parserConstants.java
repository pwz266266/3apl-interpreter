/* Generated By:JavaCC: Do not edit this line. TripAPL_parserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TripAPL_parserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NAME = 6;
  /** RegularExpression Id. */
  int CAPBASE = 7;
  /** RegularExpression Id. */
  int BELBASE = 8;
  /** RegularExpression Id. */
  int GOALBASE = 9;
  /** RegularExpression Id. */
  int PLANBASE = 10;
  /** RegularExpression Id. */
  int GP_RULES = 11;
  /** RegularExpression Id. */
  int PR_RULES = 12;
  /** RegularExpression Id. */
  int COMMA = 13;
  /** RegularExpression Id. */
  int COLON = 14;
  /** RegularExpression Id. */
  int PROLOGEND = 15;
  /** RegularExpression Id. */
  int LBRACE = 16;
  /** RegularExpression Id. */
  int RBRACE = 17;
  /** RegularExpression Id. */
  int AND = 18;
  /** RegularExpression Id. */
  int OR = 19;
  /** RegularExpression Id. */
  int IF = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int DO = 22;
  /** RegularExpression Id. */
  int THEN = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int SEMICOL = 25;
  /** RegularExpression Id. */
  int NONE = 26;
  /** RegularExpression Id. */
  int SEND = 27;
  /** RegularExpression Id. */
  int Env = 28;
  /** RegularExpression Id. */
  int TEST = 29;
  /** RegularExpression Id. */
  int LPAR = 30;
  /** RegularExpression Id. */
  int RPAR = 31;
  /** RegularExpression Id. */
  int LSQA = 32;
  /** RegularExpression Id. */
  int RSQA = 33;
  /** RegularExpression Id. */
  int VBAR = 34;
  /** RegularExpression Id. */
  int QUSMARK = 35;
  /** RegularExpression Id. */
  int TRUE = 36;
  /** RegularExpression Id. */
  int NOT = 37;
  /** RegularExpression Id. */
  int IMPLY = 38;
  /** RegularExpression Id. */
  int GIVES = 39;
  /** RegularExpression Id. */
  int PNOT = 40;
  /** RegularExpression Id. */
  int VAL = 41;
  /** RegularExpression Id. */
  int VAR = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "\"Name\"",
    "\"Capability Base\"",
    "\"Belief Base\"",
    "\"Goal Base\"",
    "\"Plan Base\"",
    "\"Goal Planning Rule Base\"",
    "\"Plan Revision Rule Base\"",
    "\",\"",
    "\":\"",
    "\".\"",
    "\"{\"",
    "\"}\"",
    "\"and\"",
    "\"or\"",
    "\"if\"",
    "\"while\"",
    "\"do\"",
    "\"then\"",
    "\"else\"",
    "\";\"",
    "\"None\"",
    "\"Send\"",
    "\"Env\"",
    "\"Test:\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"|\"",
    "\"?\"",
    "\"true\"",
    "\"not\"",
    "\"<-\"",
    "\":-\"",
    "\"\\\\+\"",
    "<VAL>",
    "<VAR>",
  };

}
