Name: Saler
Belief Base:
    money(0).
    price(pen,2).
    price(pencil,1).
    storage(pen,12).
    storage(pencil,45).
Goal Base:
    inform(),
    sale()
Capability Base:
    {(price(X,Price) and (storage(X,Count) and (sub(Count,1,NCount) and (money(Money) and (sum(Money, Price, NMoney) and
    not sum(Count,Count,0))))))}
    sale(X,Buyer)
    {not money(Money), not storage(X,Count), not received(query, Buyer, buy(X), channel(1)), money(NMoney), storage(X,NCount)}

    {received(query, Buyer, buy(X), channel(1))}
    deleteOrder(X)
    {not received(query, Buyer, buy(X), channel(1))}

    {received(query, Buyer, price(), channel(1))}
    receivePriceRequest(Buyer)
    {not received(query, Buyer, price(), channel(1))}
Plan Base:

Goal Planning Rule Base:
{
    inform()
}
<- true |
{
    Send(inform, ams, is(saler),channel(1));
}


<- received(query, Buyer, price(), channel(1)) |
{
    receivePriceRequest(Buyer);
    Send(inform, Buyer, price(pen,2),channel(1));
    Send(inform, Buyer, price(pencil,1),channel(1));
}

<- received(query, Buyer, buy(pen), channel(1)) |
{
    sale(pen, Buyer);
    Send(inform, Buyer, sale(pen), channel(1));
}

<- received(query, Buyer, buy(pencil), channel(1)) |
{
    sale(pencil, Buyer);
    Send(inform, Buyer, sale(pencil), channel(1));
}


{
    sale()
}
<- (storage(pencil,0) and storage(pen,0)) |
{
    Test: true;
}

Plan Revision Rule Base:
{
    sale(pen, Buyer);
    Send(inform, Buyer, sale(pen), channel(1));
}
<- storage(pen,0) |
{
    if(received(query, Buyer, buy(pen), channel(1))){
        deleteOrder(pen);
    }else{
        Test:true;
    };
    Send(inform, Buyer, no(pen), channel(1));
}


{
    sale(pencil, Buyer);
    Send(inform, Buyer, sale(pencil), channel(1));
}
<- storage(pencil,0) |
{
    if(received(query, Buyer, buy(pencil), channel(1))){
        deleteOrder(pencil);
    }else{
        Test:true;
    };
    Send(inform, Buyer, no(pencil), channel(1));
}